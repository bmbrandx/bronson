// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'bronson', 'apps/lib/twitter/views/tweetItemView', 'text!apps/src/twitter/templates/tweetsTemplate.html'], function($, _, Backbone, Bronson, TweetItemView, TweetsTemplate) {
    var TweetsView;
    return TweetsView = (function(_super) {

      __extends(TweetsView, _super);

      TweetsView.name = 'TweetsView';

      function TweetsView() {
        return TweetsView.__super__.constructor.apply(this, arguments);
      }

      TweetsView.prototype.initialize = function() {
        this.id = Math.random().toString(36).substring(7);
        _.bindAll(this, 'render');
        return this.collection.bind('reset', this.render);
      };

      TweetsView.prototype.render = function() {
        if ($("." + this.id, this.el).length === 0) {
          $(this.el).append(_.template(TweetsTemplate, {
            id: this.id
          }));
        } else {
          $("." + this.id, this.el).html(_.template(TweetsTemplate, {
            id: this.id
          }));
        }
        _.each(this.collection.models, (function(item) {
          return this.renderItem(item);
        }), this);
        return this;
      };

      TweetsView.prototype.renderItem = function(item) {
        var tweetItemView;
        tweetItemView = new TweetItemView({
          model: item
        });
        return $('.module.twitter', this.el).append(tweetItemView.render().el);
      };

      return TweetsView;

    })(Backbone.View);
  });

}).call(this);
