// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'bronson', 'async!http://maps.googleapis.com/maps/api/js?key=AIzaSyDTB9ap7VN6CRrMWaAS2cKwctgjn-_l_oA&sensor=false'], function(_, Backbone, Bronson) {
    var MapModule;
    return MapModule = (function(_super) {

      __extends(MapModule, _super);

      MapModule.name = 'MapModule';

      function MapModule(parameters) {
        if (parameters == null) {
          parameters = {};
        }
        this.id = Math.random().toString(36).substring(7);
        this.el = parameters.el;
        MapModule.__super__.constructor.apply(this, arguments);
      }

      MapModule.prototype.initialize = function() {
        var item, mapOptions,
          _this = this;
        mapOptions = {
          zoom: 8,
          center: new google.maps.LatLng(-34.397, 150.644),
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        item = $("<div class='module maps " + this.id + "'></div>");
        $(this.el).append(item);
        this.map = new google.maps.Map($(item).get(0), mapOptions);
        return Bronson.Core.subscribe('MapModule', 'geoUpdate', function(data) {
          var panLocation;
          panLocation = new google.maps.LatLng(data.latitude, data.longitude);
          return _this.map.panTo(panLocation);
        });
      };

      MapModule.prototype.dispose = function() {};

      return MapModule;

    })(Bronson.Module);
  });

}).call(this);
