/*! Bronson - v0.1.0 - 2012-08-01
* http://github.com/eclifford/R8/
* Copyright (c) 2012 Eric Clifford; Licensed MIT */
(function(a,b){return typeof define=="function"&&define.amd?define([],b):a.Bronson=b(a.b)})(this,function(){var a,b,c,d,e;return b=window.Bronson={version:"0.0.1"},require.onError=function(a){var b;if(a.requireType==="timeout")return console.error("Could not load module "+a.requireModules);throw b=a.requireModules&&a.requireModules[0],require.undef(b),a},requirejs.onResourceLoad=function(a,b,c){},a=b.Api={publish:function(a){if(a==null||typeof a!="string")throw new Error("Bronson.Api#publish: a valid channel must be supplied");return b.Core.publish(a,arguments[1])},subscribe:function(a,c,e){if(a==null||typeof a!="string")throw new Error("Bronson.Api#subscribe: a valid subscriber must be supplied");if(c==null||typeof c!="string")throw new Error("Bronson.Api#subscribe: a valid channel must be supplied");if(e!=null&&typeof e!="function")throw new Error("Bronson.Api#subscribe: callback must be a function");if(d.validate(a,c))return b.Core.subscribe(a,c,e);throw new Error("Bronson.Api#subscribe: Subscriber "+a+" not allowed to listen on channel "+c)},unsubscribe:function(a,c){if(a==null||typeof a!="string")throw new Error("Bronson.Api#unsubscribe: a valid subscriber must be supplied");if(c==null||typeof c!="string")throw new Error("Bronson.Api#unsubscribe: a valid channel must be supplied");return b.Core.unsubscribe(a,c)},createModule:function(){var a,c,d,e;c=arguments[0],d=3<=arguments.length?__slice.call(arguments,1,e=arguments.length-1):(e=1,[]),a=arguments[e++];if(!c||typeof c!="string")throw new Error("Bronson.Api#createModule: a valid module alias or path must be supplied");if(a!=null&&typeof a!="function")throw new Error("Bronson.Api#createModule: callback must be a function");return b.Core.createModule(c,d,a)},stopAllModules:function(){return b.Core.stopAllModules()},stopModule:function(a,c){if(!a||typeof a!="string")throw new Error("Bronson.Api#stopModule: a valid module alias or path must be supplied");if(c!=null&&typeof c!="function")throw new Error("Bronson.Api#stopModule: callback must be a function");return b.Core.stopModule(a,c)}},d=b.Permissions={enabled:!1,rules:{},extend:function(a){var c;return c=b.Util.extend(c,a)},validate:function(a,b){var c,d;if(a==null||typeof a!="string")throw new Error("Bronson.Permissions#validate: must provide a valid subscriber");if(b==null||typeof b!="string")throw new Error("Bronson.Permissions#validate: must provide a valid channel");return this.enabled?(c=(d=this.rules[a])!=null?d[b]:void 0,c===void 0?!1:c):!0}},c=b.Core={channels:{},modules:{},publish:function(a){var b,c,d,e,f,g;if(a==null)throw new Error("Bronson.Core#publish: channel must be defined");if(typeof a!="string")throw new Error("Bronson.Core#publish: channel must be a string");if(!this.channels[a])return!0;d=this.channels[a].slice(),b=[].slice.call(arguments,1),g=[];for(e=0,f=d.length;e<f;e++)c=d[e],g.push(c.callback.apply(this,b));return g},subscribe:function(a,b,c){if(a==null||typeof a!="string")throw new Error("Bronson.Core#subscribe: must supply a valid subscriber");if(b==null||typeof b!="string")throw new Error("Bronson.Core#subscribe: must supply a valid channel");if(c!=null&&typeof c!="function")throw new Error("Bronson.Core#subscribe: callback must be a function");return this.channels[b]=this.channels[b]?this.channels[b]:[],this.channels[b].push({subscriber:a,callback:c})},unsubscribe:function(a,b){var c,d,e,f,g,h;g=this.channels[b],h=[];for(c=e=0,f=g.length;e<f;c=++e)d=g[c],d.subscriber===a?h.push(this.channels[b].splice(c,1)):h.push(void 0);return h},unsubscribeAll:function(a){var b,c,d,e,f,g;g=[];for(b in this.channels)if(this.channels.hasOwnProperty(b)){f=this.channels[b];for(c=d=0,e=f.length;d<e;c=++d)a=f[c],a===a&&this.channels[b].splice(c,1);this.channels[b].length===0?g.push(delete this.channels[b]):g.push(void 0)}else g.push(void 0);return g},createModule:function(){var a,b,c,d,e=this;b=arguments[0],c=3<=arguments.length?__slice.call(arguments,1,d=arguments.length-1):(d=1,[]),a=arguments[d++];if(b==null)throw new Error("Bronson.Core#createModule: moduleId must be defined");if(typeof b!="string")throw new Error("Bronson.Core#createModule: moduleId must be a string");return c=c[0],require([b],function(d){var f;try{return f=new d(c),f.id=b,e.modules[b]=f,a(f)}catch(g){throw new Error("Bronson.Core#createModule: "+g)}})},stopAllModules:function(){var a,b;b=[];for(a in modules)b.push(this.stopModule(a));return b},stopModule:function(a,b){if(a==null||typeof a!="string")throw new Error("Bronson.Core#stopModule: moduleId must be valid");if(this.modules[a]==null)throw new Error("Bronson.Core#stopModule: that moduleId is not loaded");try{require.undef(a),this.unsubscribeAll(a)}catch(c){throw new Error("Bronson.Core#stopModule: "+c)}return b()}},b.Module=function(){function a(){this.initialize.apply(this,arguments)}return a.prototype.id="",a.prototype.disposed=!1,a.prototype.initialize=function(){throw new Error("Bronson.Module#initialize: must override initialize")},a.prototype.dispose=function(){var a,c;if(this.disposed)return;for(c in this){if(!__hasProp.call(this,c))continue;a=this[c],a&&typeof a.dispose=="function"&&(a.dispose(),delete this[c])}return b.Core.stopModule(id),this.disposed=!0,typeof Object.freeze=="function"?Object.freeze(this):void 0},a}(),e=b.Util={extend:function(){var a,b,c,d,e,f,g;c=arguments[0],a=2<=arguments.length?__slice.call(arguments,1):[];if(c==null)return{};for(f=0,g=a.length;f<g;f++){d=a[f];for(b in d){if(!__hasProp.call(d,b))continue;e=d[b],c[b]==null||typeof e!="object"?c[b]=e:c[b]=extend(c[b],e)}}return c}},b});